function [Coord_Receiver,err_rms]=findRT(A,B)     

 %函数主要使用了奇异值分解来获取影像仪坐标系到V-STARS坐标系的旋转平移矩阵
 %将坐标系下的光敏元件中心点进行R-T变换到V-STARS坐标系下作为基准点输出
 %输入：
 % 某块靶标上的反光标记点在V-STARS系统下坐标
 % 某块靶标上反光标记点和光敏元件中心在影像仪坐标系下的坐标
 %输出：
 % 某块靶标的光敏元件中心在V-STARS系统下坐标
 % 某块靶标的光敏元件中心坐标的均方根误差

 A1=A(1:16,:);        %第一次出错在于将A看成16行，其实A有17行包括了光敏原件的中心点导致平移矩阵错误
 
 a_average=sum(A1)/16;

 b_average=sum(B)/16;

 coord_tansfer_a1 = ones(3,16);
 coord_tansfer_b1 = ones(3,16); 

 for i=1:16
     
     coord_tansfer_a1(1:3,i)=A1(i,:)-a_average;
     
     coord_tansfer_b1(1:3,i)=B(i,:)-b_average;
     
 end

%用SVD分解计算出的R,T  坐标系A到坐标系B的旋转平移矩阵；SVD：奇异值分解
 K=0;
 for i=1:16
 K=K+coord_tansfer_a1(1:3,i)*coord_tansfer_b1(1:3,i)';
 end
 
 [U,S,V]=svd(K);
 R=V*U';
 % R1=U*V';
 if det(R)<-0.9999&&det(R)>-1.0001      %如果求出的不是旋转矩阵而是反射矩阵，反射矩阵的行列式为-1.
     V(:,3)=-V(:,3);
     R=V*U';
 end
 
 T=b_average'-R*a_average';
 for m=1:17
     Ttrans(m,:)=T;
 end
 
 transA=A*R'+Ttrans;
 
 transA1=transA(1:16,:);
 
 C=transA1-B;
 D=C.^2;
 E=sum(D,2);
 F=(sqrt(E)).^2;
 
 Coord_Receiver = transA(17,:) 
 err_rms = sqrt(sum(F)/16)

end
